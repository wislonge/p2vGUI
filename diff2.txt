diff --git a/p2v/gui.c b/p2v/gui.c
index 0553cad..326e580 100644
--- a/p2v/gui.c
+++ b/p2v/gui.c
@@ -882,6 +882,8 @@ create_conversion_dialog (struct config *config)
   set_alignment (of_label, 1., 0.5);
   of_combo = gtk_combo_box_text_new ();
   gtk_label_set_mnemonic_widget (GTK_LABEL (of_label), of_combo);
+  
+  gtk_list_store_clear (GTK_LIST_STORE(gtk_combo_box_get_model (GTK_COMBO_BOX (of_combo))));
   gtk_combo_box_text_append_text (GTK_COMBO_BOX_TEXT (of_combo),
                                   "qcow2");
   gtk_combo_box_text_append_text (GTK_COMBO_BOX_TEXT (of_combo),
@@ -892,11 +894,9 @@ create_conversion_dialog (struct config *config)
   if (config && config->output)
     outputformat = strdup (config->output);
   else
-    outputformat = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (o_combo));
+    outputformat = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (of_combo));
 
- int qcow2judge=strcmp(outputformat,"qcow2")?0:1;
-  printf("william judge is %d",qcow2judge);
- if(!qcow2judge)
+  if(strcmp(outputformat,"qcow2"))
     gtk_combo_box_set_active (GTK_COMBO_BOX (of_combo), 0);
  else
     gtk_combo_box_set_active (GTK_COMBO_BOX (of_combo), 1);
@@ -2055,18 +2055,14 @@ start_conversion_clicked (GtkWidget *w, gpointer data)
     free (str2);
   }*/
 //william start
-  config->output_format="qcow2";
-  *str2 = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (of_combo));
-  printf("william debuge of_combo is %s",str2);
-    if (str2) {
-        if (STREQ (str2, "qcow2"))
-             config->output_format = "qcow2";
-        else 
-             config->output_format = "raw";
-                            free (str2);
-     } 
-//wiliam end/
-
+ // config->output_format="qcow2";
+  config->output_format = gtk_combo_box_text_get_active_text (GTK_COMBO_BOX_TEXT (of_combo));
+    
+     //   if (STREQ (str2, "qcow2"))
+       //      config->output_format=strdup("qcow2");
+       // else 
+         //    config->output_format = strdup("raw");
+      
   free (config->output_connection);
   config->output_connection = NULL;
   /*str = gtk_entry_get_text (GTK_ENTRY (oc_entry));
@@ -2118,6 +2114,17 @@ start_conversion_thread (void *data)
 {
   struct config *copy = data;
   int r;
+   GtkWidget *dlg;
+//william debug info
+  dlg = gtk_message_dialog_new (GTK_WINDOW (run_dlg),
+                                GTK_DIALOG_DESTROY_WITH_PARENT,
+                                GTK_MESSAGE_ERROR,
+                                GTK_BUTTONS_OK,
+                                _("outputformat: %s"), copy->output_format);
+  gtk_window_set_title (GTK_WINDOW (dlg), _("format info"));
+  gtk_dialog_run (GTK_DIALOG (dlg));
+  gtk_widget_destroy (dlg);
+//william end
 
   r = start_conversion (copy, notify_ui_callback);
   free_config (copy);
